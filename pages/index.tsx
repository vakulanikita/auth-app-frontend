import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import s from "../styles/Home.module.scss";
import Container from "../components/Container/Index";
import NextLink from "next/link";
import HomeIcon from "@mui/icons-material/Home";
import HomeRoundedIcon from "@mui/icons-material/HomeRounded";
import { useAppDispatch, useAppSelector } from "../redux/hooks/redux";
import { cardSlice } from "../redux/store/reducers/CardSlice";
import { useCookies } from "react-cookie";
import { useRouter } from "next/router";
import { Api } from "../utils/api";
import React from "react";
import { IUser } from "../types/IUser";
import Button from "../components/Button";
import { Skeleton } from "@mui/material";

interface HomeProps {
  userToken: string;
}

const Home: NextPage<HomeProps> = ({ userToken }) => {
  const [cookie, setCookie, removeCookie] = useCookies();
  const router = useRouter();
  const [user, setUser] = React.useState<IUser>();

  React.useEffect(() => {
    const axiosHeaders = {
      headers: {
        Authorization: userToken,
      },
    };

    Api.get("/auth/me", axiosHeaders)
      .then((result) => {
        // console.log(result);
        setUser(result.data);
      })
      .catch((err) => {
        console.log(err);
      });
  }, []);

  return (
    <div className={s.root}>
      <Head>
        <title>Next.js Starter</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <header className={s.header}>
        <Container>
          <NextLink href="/" passHref>
            <a className={s.link}>Auth App</a>
          </NextLink>
        </Container>
      </header>

      <main className={s.main}>
        <Container>
          <div className={s.profileData}>
            <span className={s.title}>Email: </span>
            {user?.email ? (
              <span className={s.info}>{user.email}</span>
            ) : (
              <Skeleton variant="rectangular" height={21} width={100} />
            )}
          </div>
          <div className={s.profileData}>
            <span className={s.title}>First Name: </span>
            {user?.firstName ? (
              <span className={s.info}>{user.firstName}</span>
            ) : (
              <Skeleton variant="rectangular" height={21} width={100} />
            )}
          </div>
          <div className={s.profileData}>
            <span className={s.title}>Last Name: </span>
            {user?.lastName ? (
              <span className={s.info}>{user.lastName}</span>
            ) : (
              <Skeleton variant="rectangular" height={21} width={100} />
            )}
          </div>

          <div className={s.logOutBtn}>
            <Button
              variant="primary"
              onClick={() => {
                removeCookie("user_token");
                router.reload();
              }}
            >
              log out
            </Button>
          </div>
        </Container>
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  if (!req.cookies.user_token) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: {
      userToken: req.cookies.user_token,
    },
  };
};

export default Home;
